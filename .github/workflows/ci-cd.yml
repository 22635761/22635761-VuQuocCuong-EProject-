name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1️⃣ Kiểm tra và test code
  test:
    runs-on: ubuntu-latest

    # ⚙️ Thêm MongoDB service để test kết nối
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Wait for MongoDB to start
        run: sleep 10

      # Test Auth Service
      - name: Run Auth tests
        working-directory: ./auth
        env:
          MONGO_URI: mongodb://localhost:27017/auth_db
        run: |
          npm ci
          npm uninstall chai
          npm install chai@4.5.0 chai-http@4
          npm test

      # Test Product Service
      - name: Run Product tests
        working-directory: ./product
        env:
          MONGO_URI: mongodb://localhost:27017/product_db
        run: |
          npm ci
          npm uninstall chai
          npm install chai@4.5.0 chai-http@4
          npm test

  # 2️⃣ Build và push Docker images (chỉ khi test pass)
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & Push Auth
      - name: Build and Push Auth
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./auth
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      # Build & Push Product
      - name: Build and Push Product
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product-service:latest ./product
          docker push ${{ secrets.DOCKER_USERNAME }}/product-service:latest

      # Build & Push API Gateway
      - name: Build and Push Gateway
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest ./api-gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
